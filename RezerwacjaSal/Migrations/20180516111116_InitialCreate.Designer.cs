// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RezerwacjaSal.Data;
using System;

namespace RezerwacjaSal.Migrations
{
    [DbContext(typeof(RezerwacjaSalContext))]
    [Migration("20180516111116_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RezerwacjaSal.Models.Building", b =>
                {
                    b.Property<int>("BuildingID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("DepartmentID");

                    b.Property<string>("GPS_E");

                    b.Property<string>("GPS_N");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("BuildingID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("RezerwacjaSal.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Administrator");

                    b.Property<int>("Manager");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("RezerwacjaSal.Models.Employment", b =>
                {
                    b.Property<int>("EmploymentID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DepartmentID");

                    b.Property<int>("PearsonID");

                    b.Property<string>("Position")
                        .HasMaxLength(50);

                    b.HasKey("EmploymentID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("PearsonID");

                    b.ToTable("Employment");
                });

            modelBuilder.Entity("RezerwacjaSal.Models.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Email");

                    b.Property<string>("IP");

                    b.Property<string>("MessageContent")
                        .IsRequired();

                    b.Property<string>("MessageSubject")
                        .IsRequired();

                    b.Property<int?>("PearsonID");

                    b.Property<string>("PearsonName");

                    b.HasKey("MessageID");

                    b.HasIndex("PearsonID");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("RezerwacjaSal.Models.Pearson", b =>
                {
                    b.Property<int>("PearsonID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<bool>("Employee");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Note")
                        .HasMaxLength(200);

                    b.Property<int>("PearsonNumber");

                    b.Property<string>("Phone");

                    b.HasKey("PearsonID");

                    b.ToTable("Pearson");
                });

            modelBuilder.Entity("RezerwacjaSal.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("Note")
                        .HasMaxLength(200);

                    b.Property<int>("PearsonID");

                    b.Property<int>("RoomID");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("ReservationID");

                    b.HasIndex("PearsonID");

                    b.HasIndex("RoomID");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("RezerwacjaSal.Models.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BuildingID");

                    b.Property<string>("Equipment")
                        .HasMaxLength(100);

                    b.Property<int>("Number");

                    b.Property<int?>("Spots");

                    b.Property<string>("Type")
                        .HasMaxLength(50);

                    b.HasKey("RoomID");

                    b.HasIndex("BuildingID");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("RezerwacjaSal.Models.Building", b =>
                {
                    b.HasOne("RezerwacjaSal.Models.Department", "Department")
                        .WithMany("Buildings")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RezerwacjaSal.Models.Employment", b =>
                {
                    b.HasOne("RezerwacjaSal.Models.Department", "Department")
                        .WithMany("Employments")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("RezerwacjaSal.Models.Pearson", "Pearson")
                        .WithMany("Employments")
                        .HasForeignKey("PearsonID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RezerwacjaSal.Models.Message", b =>
                {
                    b.HasOne("RezerwacjaSal.Models.Pearson", "Pearson")
                        .WithMany("Messages")
                        .HasForeignKey("PearsonID");
                });

            modelBuilder.Entity("RezerwacjaSal.Models.Reservation", b =>
                {
                    b.HasOne("RezerwacjaSal.Models.Pearson", "Pearson")
                        .WithMany()
                        .HasForeignKey("PearsonID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RezerwacjaSal.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RezerwacjaSal.Models.Room", b =>
                {
                    b.HasOne("RezerwacjaSal.Models.Building", "Building")
                        .WithMany("Rooms")
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
